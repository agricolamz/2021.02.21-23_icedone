[["сбор-данных-из-интернета-rvest.html", "4 Сбор данных из интернета: rvest 4.1 Введение 4.2 Работа с пакетом rvest 4.3 Использование циклов 4.4 Обкачивание нескольких страниц", " 4 Сбор данных из интернета: rvest library(tidyverse) Достаточно часто данные не ходят упакованные в готовые файлы .csv или .json. Иногда данные лежат в открытом доступе на какой-нибудь странице в интернете. А иногда никто и не думал, что что-то станет данными: заголовки и тексты новостей, комментарии, твиты и т. п. В этом разделе мы обсудим основы извлечения данных из вебстраниц. 4.1 Введение Любая html-документ — это обычный xml файл, т. е. такой иерархически устроенный тип данных, где у каждого узла (кроме корневого) есть родительский узел и могут быть дочерние узлы и дополнительные атрибуты. Обычно самый верхний узел называется html, который имеет два дочерних узла head и body. Каждый html-документ является инструкцией для браузера, в которой говориться что и в каком порядке нужно отображать, но одновременно эта инструкция является кодом, который мы можем посмотреть. В большинстве браузеров это можно сделать при помощи горячих клавиш Ctrl+U, в Apple Safari — Cmd+Option+U. Кроме того есть режим разработчика, который позволяет делать много всего, в том числе наводить на какой-то объект в браузере и узнавать какой фрагмент кода ему соответствует (этот режим можно вызвать, нажав F12 или Ctrl+Shift+I, в Apple Safari вроде нет горячих клавиш и нужно вызывать как-то из меню). Большинство узлов html-документа состоят из тег узла, например, p значения узла, например, Жили-были три медведя. id (уникальные объекты в html-документе), class (неуникальные объекты в html-документе) и другием атрибуты узла Например: &lt;p class=&quot;story&quot; some_atribute = 42&gt;Жили-были три медведя.&lt;/p&gt; Некоторые html-документ не являются статическими и изменяются после того, как страница была открыта при помощи JavaScript’а. Это динамичность может быть скрытой, когда пользователь лишь видит, как открывается страница, а иногда может быть завязана на некоторые действия пользователя. Информацию со статических страниц собирать достаточно просто и для этого нам хватит пакета rvest. C динамическими сайтами все иногда несколько сложнее. Иногда на динамических страницах можно отследить источник данных, посмотрев вкладку Network в режиме разработчика (ведь откуда-то эти данные появляются в браузере, правда?). Иногда необходимо делать POST и GET запросы, хранить cookies, и т. п. — все это можно сделать при помощи пакета httr, а в самых сложных случаях (когда JavaScript JavaScript погоняет) поможет пакет RSelenium. html-тэгов очень много. Нам понадобятся: h1, h2, h3… – заголовки разного уровня p – абзац текста a – ссылка div – блок страницы (от слова division) Остальное смотрите, например, здесь. 4.2 Работа с пакетом rvest Пакет rvest позволяет скачивать страницы и потом их обрабатывать. Включим библиотеку: library(rvest) 4.2.1 Простой случай В качестве примера рассмотрим раздел популярное сайта &lt;ficbook.net&gt;: source &lt;- read_html(&quot;https://ficbook.net/popular&quot;) Объект source является списком, который содержит html-страницу. Давайте для начала выгрузим заголовок первого уровня. Функция html_nodes() позволяет вычленить исключительно узлы с каким-то тегом из всего xml-файла. source %&gt;% html_nodes(&quot;h1&quot;) {xml_nodeset (1)} [1] &lt;h1&gt;\\n Популярные фанфики и ориджиналы\\n &lt;/h1&gt; Как видно, функция вовзращает целый узел со всеми тегами. Давайте допустим, что мы хотем скачать все заголовки новостей, т. е. нам нужны значения всех узло h3. source %&gt;% html_nodes(&quot;h3&quot;) {xml_nodeset (51)} [1] &lt;h3&gt;\\n \\n ... [2] &lt;h3&gt;\\n \\n ... [3] &lt;h3&gt;\\n \\n ... [4] &lt;h3&gt;\\n \\n ... [5] &lt;h3&gt;\\n \\n ... [6] &lt;h3&gt;\\n \\n ... [7] &lt;h3&gt;\\n \\n ... [8] &lt;h3&gt;\\n \\n ... [9] &lt;h3&gt;\\n \\n ... [10] &lt;h3&gt;\\n \\n ... [11] &lt;h3&gt;\\n \\n ... [12] &lt;h3&gt;\\n \\n ... [13] &lt;h3&gt;\\n \\n ... [14] &lt;h3&gt;\\n \\n ... [15] &lt;h3&gt;\\n \\n ... [16] &lt;h3&gt;\\n \\n ... [17] &lt;h3&gt;\\n \\n ... [18] &lt;h3&gt;\\n \\n ... [19] &lt;h3&gt;\\n \\n ... [20] &lt;h3&gt;\\n \\n ... ... Ничего не видно. Это связано с тем, что на данном сайте в заголовки добавили много всего: Теперь если мы хотим обратиться к значениям этих узлов, мы можем использовать функцию html_text(): source %&gt;% html_nodes(&quot;h3&quot;) %&gt;% html_text() [1] &quot;\\n \\n \\n \\n \\n\\n Yellow\\n 40064&quot; [2] &quot;\\n \\n \\n \\n \\n\\n Сметана\\n 30062&quot; [3] &quot;\\n \\n \\n \\n \\n\\n Тысяча белых перьев\\n 29271&quot; [4] &quot;\\n \\n \\n \\n \\n\\n Лисамайн\\n 26082&quot; [5] &quot;\\n \\n \\n \\n \\n\\n В Котисаари сегодня осень\\n 26222&quot; [6] &quot;\\n \\n \\n \\n \\n\\n К вопросу об отношениях\\n 20281&quot; [7] &quot;\\n \\n \\n \\n \\n\\n feels like home\\n 20621&quot; [8] &quot;\\n \\n \\n \\n \\n\\n Weihnachten\\n 21621&quot; [9] &quot;\\n \\n \\n \\n \\n\\n Снежный принц для Владыки\\n 16912&quot; [10] &quot;\\n \\n \\n \\n \\n\\n К алтарю \\n 2115&quot; [11] &quot;\\n \\n \\n \\n \\n\\n Гранатовые соски Чон Чонгука\\n 1727&quot; [12] &quot;\\n \\n \\n \\n \\n\\n Сониум\\n 26322&quot; [13] &quot;\\n \\n \\n \\n \\n\\n Ban Crann\\n 17371&quot; [14] &quot;\\n \\n \\n \\n \\n\\n Jamais vu\\n 305514&quot; [15] &quot;\\n \\n \\n \\n \\n\\n shadow moses \\n 1437&quot; [16] &quot;\\n \\n \\n \\n \\n\\n Вжик-вжик\\n 19061&quot; [17] &quot;\\n \\n \\n \\n \\n\\n Светлячок\\n 12621&quot; [18] &quot;\\n \\n \\n \\n \\n\\n Миша и опер Медведев\\n 122313&quot; [19] &quot;\\n \\n \\n \\n \\n\\n Saint Allan&#39;s Night\\n 14542&quot; [20] &quot;\\n \\n \\n \\n \\n\\n Deadlock\\n 688454&quot; [21] &quot;\\n \\n \\n \\n \\n\\n Три месяца, ноль дней и ноль часов\\n 1290&quot; [22] &quot;\\n \\n \\n \\n \\n\\n Волчье\\n 15692&quot; [23] &quot;\\n \\n \\n \\n \\n\\n the union is our only strength\\n 1101&quot; [24] &quot;\\n \\n \\n \\n \\n\\n soon, he is going to be my lover\\n 1027&quot; [25] &quot;\\n \\n \\n \\n \\n\\n Знание — сила!\\n 415720&quot; [26] &quot;\\n \\n \\n \\n \\n\\n Кабинет 69.\\n 2704&quot; [27] &quot;\\n \\n \\n \\n \\n\\n Район спальный \\n 10222&quot; [28] &quot;\\n \\n \\n \\n \\n\\n С любовью, розовый\\n 9902&quot; [29] &quot;\\n \\n \\n \\n \\n\\n У меня на тебя аллергия \\n 943&quot; [30] &quot;\\n \\n \\n \\n \\n\\n Выбор Тристана\\n 23476&quot; [31] &quot;\\n \\n \\n \\n \\n\\n Я больше не облажаюсь, старлей...\\n 10302&quot; [32] &quot;\\n \\n \\n \\n \\n\\n Хочу детей от друга\\n 17601&quot; [33] &quot;\\n \\n \\n \\n \\n\\n Привет, Джимми!\\n 8212&quot; [34] &quot;\\n \\n \\n \\n \\n\\n Влюблённый Шекспир в Городе грехов\\n 8112&quot; [35] &quot;\\n \\n \\n \\n \\n\\n fuck me, bestie\\n 859&quot; [36] &quot;\\n \\n \\n \\n \\n\\n r/relationships\\n 9331&quot; [37] &quot;\\n \\n \\n \\n \\n\\n Stuck on you\\n 6981&quot; [38] &quot;\\n \\n \\n \\n \\n\\n Кукольные игры\\n 694&quot; [39] &quot;\\n \\n \\n \\n \\n\\n Креативщик\\n 18211&quot; [40] &quot;\\n \\n \\n \\n \\n\\n Лесная ягода \\n 1910&quot; [41] &quot;\\n \\n \\n \\n \\n\\n Не зная, как, когда или откуда\\n 702&quot; [42] &quot;\\n \\n \\n \\n \\n\\n Братья\\n 316311&quot; [43] &quot;\\n \\n \\n \\n \\n\\n Истинность солнца\\n 16745&quot; [44] &quot;\\n \\n \\n \\n \\n\\n at the end of everything\\n 632&quot; [45] &quot;\\n \\n \\n \\n \\n\\n Алаймент\\n 435766&quot; [46] &quot;\\n \\n \\n \\n \\n\\n my furry\\n 856&quot; [47] &quot;\\n \\n \\n \\n \\n\\n Предсказанному верить, или Чему быть, того не миновать\\n 5972&quot; [48] &quot;\\n \\n \\n \\n \\n\\n Я буду твоим дождем\\n 19051&quot; [49] &quot;\\n \\n \\n \\n \\n\\n Бывшие\\n 22262&quot; [50] &quot;\\n \\n \\n \\n \\n\\n Фантастические зануды и где они обитают\\n 5943&quot; [51] &quot;Войдите в аккаунт&quot; Стоит почистить: source %&gt;% html_nodes(&quot;h3&quot;) %&gt;% html_text() %&gt;% str_replace_all(&quot; {1,}&quot;, &quot; &quot;) [1] &quot;\\n \\n \\n \\n \\n\\n Yellow\\n 40064&quot; [2] &quot;\\n \\n \\n \\n \\n\\n Сметана\\n 30062&quot; [3] &quot;\\n \\n \\n \\n \\n\\n Тысяча белых перьев\\n 29271&quot; [4] &quot;\\n \\n \\n \\n \\n\\n Лисамайн\\n 26082&quot; [5] &quot;\\n \\n \\n \\n \\n\\n В Котисаари сегодня осень\\n 26222&quot; [6] &quot;\\n \\n \\n \\n \\n\\n К вопросу об отношениях\\n 20281&quot; [7] &quot;\\n \\n \\n \\n \\n\\n feels like home\\n 20621&quot; [8] &quot;\\n \\n \\n \\n \\n\\n Weihnachten\\n 21621&quot; [9] &quot;\\n \\n \\n \\n \\n\\n Снежный принц для Владыки\\n 16912&quot; [10] &quot;\\n \\n \\n \\n \\n\\n К алтарю \\n 2115&quot; [11] &quot;\\n \\n \\n \\n \\n\\n Гранатовые соски Чон Чонгука\\n 1727&quot; [12] &quot;\\n \\n \\n \\n \\n\\n Сониум\\n 26322&quot; [13] &quot;\\n \\n \\n \\n \\n\\n Ban Crann\\n 17371&quot; [14] &quot;\\n \\n \\n \\n \\n\\n Jamais vu\\n 305514&quot; [15] &quot;\\n \\n \\n \\n \\n\\n shadow moses \\n 1437&quot; [16] &quot;\\n \\n \\n \\n \\n\\n Вжик-вжик\\n 19061&quot; [17] &quot;\\n \\n \\n \\n \\n\\n Светлячок\\n 12621&quot; [18] &quot;\\n \\n \\n \\n \\n\\n Миша и опер Медведев\\n 122313&quot; [19] &quot;\\n \\n \\n \\n \\n\\n Saint Allan&#39;s Night\\n 14542&quot; [20] &quot;\\n \\n \\n \\n \\n\\n Deadlock\\n 688454&quot; [21] &quot;\\n \\n \\n \\n \\n\\n Три месяца, ноль дней и ноль часов\\n 1290&quot; [22] &quot;\\n \\n \\n \\n \\n\\n Волчье\\n 15692&quot; [23] &quot;\\n \\n \\n \\n \\n\\n the union is our only strength\\n 1101&quot; [24] &quot;\\n \\n \\n \\n \\n\\n soon, he is going to be my lover\\n 1027&quot; [25] &quot;\\n \\n \\n \\n \\n\\n Знание — сила!\\n 415720&quot; [26] &quot;\\n \\n \\n \\n \\n\\n Кабинет 69.\\n 2704&quot; [27] &quot;\\n \\n \\n \\n \\n\\n Район спальный \\n 10222&quot; [28] &quot;\\n \\n \\n \\n \\n\\n С любовью, розовый\\n 9902&quot; [29] &quot;\\n \\n \\n \\n \\n\\n У меня на тебя аллергия \\n 943&quot; [30] &quot;\\n \\n \\n \\n \\n\\n Выбор Тристана\\n 23476&quot; [31] &quot;\\n \\n \\n \\n \\n\\n Я больше не облажаюсь, старлей...\\n 10302&quot; [32] &quot;\\n \\n \\n \\n \\n\\n Хочу детей от друга\\n 17601&quot; [33] &quot;\\n \\n \\n \\n \\n\\n Привет, Джимми!\\n 8212&quot; [34] &quot;\\n \\n \\n \\n \\n\\n Влюблённый Шекспир в Городе грехов\\n 8112&quot; [35] &quot;\\n \\n \\n \\n \\n\\n fuck me, bestie\\n 859&quot; [36] &quot;\\n \\n \\n \\n \\n\\n r/relationships\\n 9331&quot; [37] &quot;\\n \\n \\n \\n \\n\\n Stuck on you\\n 6981&quot; [38] &quot;\\n \\n \\n \\n \\n\\n Кукольные игры\\n 694&quot; [39] &quot;\\n \\n \\n \\n \\n\\n Креативщик\\n 18211&quot; [40] &quot;\\n \\n \\n \\n \\n\\n Лесная ягода \\n 1910&quot; [41] &quot;\\n \\n \\n \\n \\n\\n Не зная, как, когда или откуда\\n 702&quot; [42] &quot;\\n \\n \\n \\n \\n\\n Братья\\n 316311&quot; [43] &quot;\\n \\n \\n \\n \\n\\n Истинность солнца\\n 16745&quot; [44] &quot;\\n \\n \\n \\n \\n\\n at the end of everything\\n 632&quot; [45] &quot;\\n \\n \\n \\n \\n\\n Алаймент\\n 435766&quot; [46] &quot;\\n \\n \\n \\n \\n\\n my furry\\n 856&quot; [47] &quot;\\n \\n \\n \\n \\n\\n Предсказанному верить, или Чему быть, того не миновать\\n 5972&quot; [48] &quot;\\n \\n \\n \\n \\n\\n Я буду твоим дождем\\n 19051&quot; [49] &quot;\\n \\n \\n \\n \\n\\n Бывшие\\n 22262&quot; [50] &quot;\\n \\n \\n \\n \\n\\n Фантастические зануды и где они обитают\\n 5943&quot; [51] &quot;Войдите в аккаунт&quot; Ага теперь видно, что к нам в заголовки затесалось предложение войти в аккаунт. Пока просто удалим. source %&gt;% html_nodes(&quot;h3&quot;) %&gt;% html_text() %&gt;% str_replace_all(&quot; {1,}&quot;, &quot; &quot;) %&gt;% str_remove_all(&quot;\\n&quot;) %&gt;% # удалим все \\n str_remove_all(&quot;^ {1,}&quot;) # удалим все пробелы в начале строки [1] &quot;Yellow 40064&quot; [2] &quot;Сметана 30062&quot; [3] &quot;Тысяча белых перьев 29271&quot; [4] &quot;Лисамайн 26082&quot; [5] &quot;В Котисаари сегодня осень 26222&quot; [6] &quot;К вопросу об отношениях 20281&quot; [7] &quot;feels like home 20621&quot; [8] &quot;Weihnachten 21621&quot; [9] &quot;Снежный принц для Владыки 16912&quot; [10] &quot;К алтарю 2115&quot; [11] &quot;Гранатовые соски Чон Чонгука 1727&quot; [12] &quot;Сониум 26322&quot; [13] &quot;Ban Crann 17371&quot; [14] &quot;Jamais vu 305514&quot; [15] &quot;shadow moses 1437&quot; [16] &quot;Вжик-вжик 19061&quot; [17] &quot;Светлячок 12621&quot; [18] &quot;Миша и опер Медведев 122313&quot; [19] &quot;Saint Allan&#39;s Night 14542&quot; [20] &quot;Deadlock 688454&quot; [21] &quot;Три месяца, ноль дней и ноль часов 1290&quot; [22] &quot;Волчье 15692&quot; [23] &quot;the union is our only strength 1101&quot; [24] &quot;soon, he is going to be my lover 1027&quot; [25] &quot;Знание — сила! 415720&quot; [26] &quot;Кабинет 69. 2704&quot; [27] &quot;Район спальный 10222&quot; [28] &quot;С любовью, розовый 9902&quot; [29] &quot;У меня на тебя аллергия 943&quot; [30] &quot;Выбор Тристана 23476&quot; [31] &quot;Я больше не облажаюсь, старлей... 10302&quot; [32] &quot;Хочу детей от друга 17601&quot; [33] &quot;Привет, Джимми! 8212&quot; [34] &quot;Влюблённый Шекспир в Городе грехов 8112&quot; [35] &quot;fuck me, bestie 859&quot; [36] &quot;r/relationships 9331&quot; [37] &quot;Stuck on you 6981&quot; [38] &quot;Кукольные игры 694&quot; [39] &quot;Креативщик 18211&quot; [40] &quot;Лесная ягода 1910&quot; [41] &quot;Не зная, как, когда или откуда 702&quot; [42] &quot;Братья 316311&quot; [43] &quot;Истинность солнца 16745&quot; [44] &quot;at the end of everything 632&quot; [45] &quot;Алаймент 435766&quot; [46] &quot;my furry 856&quot; [47] &quot;Предсказанному верить, или Чему быть, того не миновать 5972&quot; [48] &quot;Я буду твоим дождем 19051&quot; [49] &quot;Бывшие 22262&quot; [50] &quot;Фантастические зануды и где они обитают 5943&quot; [51] &quot;Войдите в аккаунт&quot; Теперь попробуем сделать таблицу и уберем цифры в конце: source %&gt;% html_nodes(&quot;h3&quot;) %&gt;% html_text() %&gt;% str_replace_all(&quot; {1,}&quot;, &quot; &quot;) %&gt;% str_remove_all(&quot;\\n&quot;) %&gt;% str_remove_all(&quot;^ {1,}&quot;) %&gt;% enframe() %&gt;% # превратим в таблицу slice(-n()) %&gt;% # удалим последнюю строчку mutate(numbers = str_extract(value, &quot;\\\\d*$&quot;), # выделим код value = str_remove(value, str_c(&quot; {1,}&quot;, numbers))) %&gt;% # удалим код и пробел select(-numbers) -&gt; # удалим столбец pop_fan_fiction pop_fan_fiction Каждый заголовок содержит ссылку на страницу фанфика, как бы ее добыть? Ссылка на самом деле в теге , так что теперь нам нужны такие &lt;a&gt;, которые находятся внутри &lt;h3&gt;: source %&gt;% html_nodes(&quot;h3 a&quot;) {xml_nodeset (50)} [1] &lt;a href=&quot;/readfic/10429398&quot; class=&quot;visit-link&quot;&gt;Yellow&lt;/a&gt; [2] &lt;a href=&quot;/readfic/10357485&quot; class=&quot;visit-link&quot;&gt;Сметана&lt;/a&gt; [3] &lt;a href=&quot;/readfic/10086514&quot; class=&quot;visit-link&quot;&gt;Тысяча белых перьев&lt;/a&gt; [4] &lt;a href=&quot;/readfic/10019420&quot; class=&quot;visit-link&quot;&gt;Лисамайн&lt;/a&gt; [5] &lt;a href=&quot;/readfic/10019135&quot; class=&quot;visit-link&quot;&gt;В Котисаари сегодня осень ... [6] &lt;a href=&quot;/readfic/10415930&quot; class=&quot;visit-link&quot;&gt;К вопросу об отношениях&lt;/a&gt; [7] &lt;a href=&quot;/readfic/10408684&quot; class=&quot;visit-link&quot;&gt;feels like home&lt;/a&gt; [8] &lt;a href=&quot;/readfic/9997807&quot; class=&quot;visit-link&quot;&gt;Weihnachten&lt;/a&gt; [9] &lt;a href=&quot;/readfic/10395350&quot; class=&quot;visit-link&quot;&gt;Снежный принц для Владыки ... [10] &lt;a href=&quot;/readfic/10397610&quot; class=&quot;visit-link&quot;&gt;К алтарю &lt;/a&gt; [11] &lt;a href=&quot;/readfic/10407954&quot; class=&quot;visit-link&quot;&gt;Гранатовые соски Чон Чонг ... [12] &lt;a href=&quot;/readfic/10171350&quot; class=&quot;visit-link&quot;&gt;Сониум&lt;/a&gt; [13] &lt;a href=&quot;/readfic/10033794&quot; class=&quot;visit-link&quot;&gt;Ban Crann&lt;/a&gt; [14] &lt;a href=&quot;/readfic/10395456&quot; class=&quot;visit-link&quot;&gt;Jamais vu&lt;/a&gt; [15] &lt;a href=&quot;/readfic/10406612&quot; class=&quot;visit-link&quot;&gt;shadow moses &lt;/a&gt; [16] &lt;a href=&quot;/readfic/10019753&quot; class=&quot;visit-link&quot;&gt;Вжик-вжик&lt;/a&gt; [17] &lt;a href=&quot;/readfic/10371908&quot; class=&quot;visit-link&quot;&gt;Светлячок&lt;/a&gt; [18] &lt;a href=&quot;/readfic/10416997&quot; class=&quot;visit-link&quot;&gt;Миша и опер Медведев&lt;/a&gt; [19] &lt;a href=&quot;/readfic/10016266&quot; class=&quot;visit-link&quot;&gt;Saint Allan&#39;s Night&lt;/a&gt; [20] &lt;a href=&quot;/readfic/9812943&quot; class=&quot;visit-link&quot;&gt;Deadlock&lt;/a&gt; ... Так как ссылка находиться не в тексте, а в атрибуте нужна функция html_attr(): source %&gt;% html_nodes(&quot;h3 a&quot;) %&gt;% html_attr(&quot;href&quot;) [1] &quot;/readfic/10429398&quot; &quot;/readfic/10357485&quot; &quot;/readfic/10086514&quot; [4] &quot;/readfic/10019420&quot; &quot;/readfic/10019135&quot; &quot;/readfic/10415930&quot; [7] &quot;/readfic/10408684&quot; &quot;/readfic/9997807&quot; &quot;/readfic/10395350&quot; [10] &quot;/readfic/10397610&quot; &quot;/readfic/10407954&quot; &quot;/readfic/10171350&quot; [13] &quot;/readfic/10033794&quot; &quot;/readfic/10395456&quot; &quot;/readfic/10406612&quot; [16] &quot;/readfic/10019753&quot; &quot;/readfic/10371908&quot; &quot;/readfic/10416997&quot; [19] &quot;/readfic/10016266&quot; &quot;/readfic/9812943&quot; &quot;/readfic/10421614&quot; [22] &quot;/readfic/10037569&quot; &quot;/readfic/10431022&quot; &quot;/readfic/9570998&quot; [25] &quot;/readfic/10371922&quot; &quot;/readfic/10309689&quot; &quot;/readfic/10411907&quot; [28] &quot;/readfic/10402262&quot; &quot;/readfic/10416707&quot; &quot;/readfic/10329650&quot; [31] &quot;/readfic/10402435&quot; &quot;/readfic/10379341&quot; &quot;/readfic/10161264&quot; [34] &quot;/readfic/10413404&quot; &quot;/readfic/10388478&quot; &quot;/readfic/9974478&quot; [37] &quot;/readfic/10413770&quot; &quot;/readfic/10410523&quot; &quot;/readfic/10404116&quot; [40] &quot;/readfic/9773287&quot; &quot;/readfic/10399219&quot; &quot;/readfic/10326638&quot; [43] &quot;/readfic/10354281&quot; &quot;/readfic/10432311&quot; &quot;/readfic/10112253&quot; [46] &quot;/readfic/10396570&quot; &quot;/readfic/10418910&quot; &quot;/readfic/10406127&quot; [49] &quot;/readfic/9178422&quot; &quot;/readfic/10413779&quot; Теперь мы можем сохранить это в переменную нашей таблицы pop_fan_fiction: source %&gt;% html_nodes(&quot;h3 a&quot;) %&gt;% html_attr(&quot;href&quot;) -&gt; pop_fan_fiction$link pop_fan_fiction Теперь, если мы соединим кусочек в графе link и https://ficbook.net, то мы получим ссылку на текст/оглавления фанфика. Добавьте к таблице столбец с количеством лайков. Попробуем обкачать авторов и ссылки на их страницы и добавить их к таблице. Если мы присмотримся, то авторы находятся в теге &lt;div&gt;. Однако это очень популярный тэг, и в нем может быть все, что угодно, так что добавим еще тегов, чтобы указать путь точнее: [1] &quot;Дэйнерис&quot; &quot;Дэйнерис&quot; [3] &quot;Дэйнерис&quot; &quot;Дэйнерис&quot; [5] &quot;Дэйнерис&quot; &quot;лунный мечтатель полтергейста&quot; [7] &quot;international playgirl&quot; &quot;Дэйнерис&quot; [9] &quot;chate&quot; &quot;Франк пишет&quot; [11] &quot;Франк пишет&quot; &quot;Дэйнерис&quot; [13] &quot;Дэйнерис&quot; &quot;rikookie&quot; [15] &quot;magnus bane&quot; &quot;Дэйнерис&quot; [17] &quot;Pak Yeon Hee&quot; &quot;YKET&quot; [19] &quot;Дэйнерис&quot; &quot;rikookie&quot; [21] &quot;Франк пишет&quot; &quot;Дэйнерис&quot; [23] &quot;Чайка_Лу&quot; &quot;Чайка_Лу&quot; [25] &quot;Aurit&quot; &quot;Anna Moss&quot; [27] &quot;Deus Rex&quot; &quot;magnus bane&quot; [29] &quot;К.О.В.Ш.&quot; &quot;голубая радуга&quot; [31] &quot;Shifer dark&quot; &quot;SugarSyrup&quot; [33] &quot;Аргус Филченков&quot; &quot;CheBe&quot; [35] &quot;Eva_Grey&quot; &quot;hartwig_n&quot; [37] &quot;vespertineflora&quot; &quot;varnish&quot; [39] &quot;Воу-Воу&quot; &quot;Pink_bra&quot; [41] &quot;minimoninam&quot; &quot;Vi Ewaz&quot; [43] &quot;sarahyyy&quot; &quot;Pak Yeon Hee&quot; [45] &quot;magnus bane&quot; &quot;Чайка_Лу&quot; [47] &quot;Rakot&quot; &quot;HaruHarada&quot; [49] &quot;Fereht&quot; &quot;TsissiBlack&quot; [51] &quot;younghosie&quot; &quot;aksiomazweifel&quot; Все хорошо, но получилось 52 строчки, а в нашем pop_fan_fiction лишь 50 строчек. Это связано с тем, что у некоторых фанфиков несколько авторов. К счастью это можно “вылечить” посмотрев на ссылки: source %&gt;% html_nodes(&quot;div span a&quot;) %&gt;% html_attr(&quot;href&quot;) -&gt; author_links author_links [1] &quot;/authors/1819996&quot; [2] &quot;/authors/1819996&quot; [3] &quot;/authors/1819996&quot; [4] &quot;/authors/1819996&quot; [5] &quot;/authors/1819996&quot; [6] &quot;/authors/125758&quot; [7] &quot;/authors/2551368&quot; [8] &quot;/authors/1819996&quot; [9] &quot;/authors/45010&quot; [10] &quot;/authors/4371126&quot; [11] &quot;/authors/4371126&quot; [12] &quot;/authors/1819996&quot; [13] &quot;/authors/1819996&quot; [14] &quot;/authors/153034&quot; [15] &quot;/authors/211970&quot; [16] &quot;/authors/1819996&quot; [17] &quot;/authors/2353948&quot; [18] &quot;/authors/3664744&quot; [19] &quot;/authors/1819996&quot; [20] &quot;/authors/153034&quot; [21] &quot;/authors/4371126&quot; [22] &quot;/authors/1819996&quot; [23] &quot;/authors/923348&quot; [24] &quot;/authors/923348&quot; [25] &quot;/authors/4888014&quot; [26] &quot;/authors/2367076&quot; [27] &quot;/authors/3601159&quot; [28] &quot;/authors/211970&quot; [29] &quot;/authors/108550&quot; [30] &quot;/authors/1151836&quot; [31] &quot;/authors/216926&quot; [32] &quot;/authors/4300578&quot; [33] &quot;/authors/3093607&quot; [34] &quot;/authors/75343&quot; [35] &quot;/authors/1753188&quot; [36] &quot;/authors/67708&quot; [37] &quot;/translations/by_author?author=vespertineflora&quot; [38] &quot;/authors/833307&quot; [39] &quot;/authors/1888734&quot; [40] &quot;/authors/907416&quot; [41] &quot;/authors/4262993&quot; [42] &quot;/authors/1476905&quot; [43] &quot;/translations/by_author?author=sarahyyy&quot; [44] &quot;/authors/2353948&quot; [45] &quot;/authors/211970&quot; [46] &quot;/authors/923348&quot; [47] &quot;/authors/407214&quot; [48] &quot;/authors/4712402&quot; [49] &quot;/authors/185855&quot; [50] &quot;/authors/167865&quot; [51] &quot;/authors/3702102&quot; [52] &quot;/authors/117765&quot; Как видно, второй автор возникает, в случаях с переводом, так что можно их отфильтровать: tibble(authors, author_links) %&gt;% filter(!str_detect(author_links, &quot;translation&quot;)) %&gt;% bind_cols(pop_fan_fiction) -&gt; pop_fan_fiction glimpse(pop_fan_fiction) Rows: 50 Columns: 5 $ authors &lt;chr&gt; &quot;Дэйнерис&quot;, &quot;Дэйнерис&quot;, &quot;Дэйнерис&quot;, &quot;Дэйнерис&quot;, &quot;Дэйнери… $ author_links &lt;chr&gt; &quot;/authors/1819996&quot;, &quot;/authors/1819996&quot;, &quot;/authors/181999… $ name &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1… $ value &lt;chr&gt; &quot;Yellow&quot;, &quot;Сметана&quot;, &quot;Тысяча белых перьев&quot;, &quot;Лисамайн&quot;, … $ link &lt;chr&gt; &quot;/readfic/10429398&quot;, &quot;/readfic/10357485&quot;, &quot;/readfic/1008… 4.3 Использование циклов Давайте попробуем скачать пэйринг. Наш старый способ посмотреть путь, не пройдет, туда попадает много мусора: source %&gt;% html_nodes(&quot;dl a&quot;) %&gt;% html_text() %&gt;% head() [1] &quot;Ориджиналы&quot; &quot;Амур/Ким&quot; &quot;2000-е годы&quot; &quot;Hurt/Comfort&quot; &quot;Буллинг&quot; [6] &quot;Взросление&quot; Во-первых, так как к одному фанфику есть много меток, нужно сохранить как-то группировку по фанфику. Для этого я запущу функцию map() из пакета purr, но если вам комфортнее использовать lapply(), то можно один заменить на другой. Ну и я понимаю, что не все могут быть в восторге от цикла в пайпе, конечно, это можно делать и по-другому. source %&gt;% html_nodes(&quot;article&quot;) %&gt;% map(function(x){ x %&gt;% html_nodes(&quot;dl a&quot;) %&gt;% html_text() }) -&gt; all_meta head(all_meta, n = 3) [[1]] [1] &quot;Ориджиналы&quot; &quot;Амур/Ким&quot; [3] &quot;2000-е годы&quot; &quot;Hurt/Comfort&quot; [5] &quot;Буллинг&quot; &quot;Взросление&quot; [7] &quot;Забота / Поддержка&quot; &quot;Мечты&quot; [9] &quot;Неловкость&quot; &quot;От друзей к возлюбленным&quot; [11] &quot;Первый поцелуй&quot; &quot;Первый раз&quot; [13] &quot;Переходный возраст&quot; &quot;Повседневность&quot; [15] &quot;Подростки&quot; &quot;Подростковая влюбленность&quot; [17] &quot;Преодоление комплексов&quot; &quot;Признания в любви&quot; [19] &quot;Прогулки&quot; &quot;Развитие отношений&quot; [21] &quot;Разговоры&quot; &quot;Романтика&quot; [23] &quot;Россия&quot; &quot;Сентиментальность&quot; [25] &quot;Сновидения&quot; &quot;Соблазнение / Ухаживания&quot; [27] &quot;Учебные заведения&quot; &quot;Флафф&quot; [29] &quot;Школьный роман&quot; [[2]] [1] &quot;Ориджиналы&quot; &quot;Чомор, Сметана, собаки, люди&quot; [3] &quot;Hurt/Comfort&quot; &quot;Возвращение&quot; [5] &quot;Выбор&quot; &quot;Вымышленные существа&quot; [7] &quot;Деревни&quot; &quot;Дикие животные&quot; [9] &quot;Домашние животные&quot; &quot;Древняя Русь&quot; [11] &quot;Дружба&quot; &quot;Духи природы&quot; [13] &quot;Жертвы обстоятельств&quot; &quot;Жестокое обращение с животными&quot; [15] &quot;Запахи&quot; &quot;Леса&quot; [17] &quot;Люди&quot; &quot;Магия&quot; [19] &quot;Моральные дилеммы&quot; &quot;Обретенные семьи&quot; [21] &quot;Охотники&quot; &quot;Побег из дома&quot; [23] &quot;Покровительство&quot; &quot;Покушение на жизнь&quot; [25] &quot;Приключения&quot; &quot;Принуждение&quot; [27] &quot;Разумные животные&quot; &quot;Самоопределение / Самопознание&quot; [29] &quot;Свобода&quot; &quot;Сказка&quot; [31] &quot;Смена сущности&quot; &quot;Тайна происхождения&quot; [33] &quot;Тайная сущность&quot; &quot;Фэнтези&quot; [35] &quot;Шейпшифтеры&quot; &quot;Элементы ангста&quot; [37] &quot;Элементы драмы&quot; &quot;Этническое фэнтези&quot; [[3]] [1] &quot;Ориджиналы&quot; &quot;Тави, Конь&quot; [3] &quot;Ангст&quot; &quot;Артефакты&quot; [5] &quot;Аскетизм&quot; &quot;Выбор&quot; [7] &quot;Выживание&quot; &quot;Вымышленная география&quot; [9] &quot;Вымышленные заболевания&quot; &quot;Вымышленные существа&quot; [11] &quot;Депривация сна&quot; &quot;Драма&quot; [13] &quot;Запахи&quot; &quot;Изоляция&quot; [15] &quot;Кровь / Травмы&quot; &quot;Локальный постапокалипсис&quot; [17] &quot;Лошади&quot; &quot;Магия&quot; [19] &quot;Мечты&quot; &quot;Мироустройство&quot; [21] &quot;Моральные дилеммы&quot; &quot;Надежда&quot; [23] &quot;Нереалистичность&quot; &quot;Неторопливое повествование&quot; [25] &quot;Одиночество&quot; &quot;Побег&quot; [27] &quot;Побег из дома&quot; &quot;Повседневность&quot; [29] &quot;Последний шанс&quot; &quot;Прогулки&quot; [31] &quot;Пустоши&quot; &quot;Свобода&quot; [33] &quot;Символизм&quot; &quot;Сновидения&quot; [35] &quot;Сюрреализм / Фантасмагория&quot; &quot;Цикличность&quot; Теперь мы получили то, что нужно, но он возвращает все метки. К сожалению создатели сайта не очень позаботились о том, чтобы упростить нам жизнь, поэтому мы воспользуемся трюком, которым мы пользовались раньше и скачаем еще и ссылки. source %&gt;% html_nodes(&quot;article&quot;) %&gt;% map(function(x){ x %&gt;% html_nodes(&quot;dl a&quot;) %&gt;% html_attr(&quot;href&quot;) }) -&gt; all_meta_links head(all_meta_links, n = 3) [[1]] [1] &quot;/fanfiction/no_fandom/originals&quot; [2] &quot;/pairings/%D0%90%D0%BC%D1%83%D1%80/%D0%9A%D0%B8%D0%BC&quot; [3] &quot;/tags/590&quot; [4] &quot;/tags/1682&quot; [5] &quot;/tags/436&quot; [6] &quot;/tags/909&quot; [7] &quot;/tags/1302&quot; [8] &quot;/tags/993&quot; [9] &quot;/tags/2459&quot; [10] &quot;/tags/344&quot; [11] &quot;/tags/2790&quot; [12] &quot;/tags/1292&quot; [13] &quot;/tags/1297&quot; [14] &quot;/tags/1677&quot; [15] &quot;/tags/218&quot; [16] &quot;/tags/581&quot; [17] &quot;/tags/588&quot; [18] &quot;/tags/1049&quot; [19] &quot;/tags/2462&quot; [20] &quot;/tags/1404&quot; [21] &quot;/tags/1401&quot; [22] &quot;/tags/1664&quot; [23] &quot;/tags/701&quot; [24] &quot;/tags/2567&quot; [25] &quot;/tags/490&quot; [26] &quot;/tags/616&quot; [27] &quot;/tags/1694&quot; [28] &quot;/tags/1667&quot; [29] &quot;/tags/2440&quot; [[2]] [1] &quot;/fanfiction/no_fandom/originals&quot; [2] &quot;/pairings/%D0%A7%D0%BE%D0%BC%D0%BE%D1%80,%20%D0%A1%D0%BC%D0%B5%D1%82%D0%B0%D0%BD%D0%B0,%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8,%20%D0%BB%D1%8E%D0%B4%D0%B8&quot; [3] &quot;/tags/1682&quot; [4] &quot;/tags/1522&quot; [5] &quot;/tags/2808&quot; [6] &quot;/tags/1685&quot; [7] &quot;/tags/364&quot; [8] &quot;/tags/622&quot; [9] &quot;/tags/517&quot; [10] &quot;/tags/466&quot; [11] &quot;/tags/1701&quot; [12] &quot;/tags/503&quot; [13] &quot;/tags/1475&quot; [14] &quot;/tags/722&quot; [15] &quot;/tags/1385&quot; [16] &quot;/tags/703&quot; [17] &quot;/tags/1538&quot; [18] &quot;/tags/1419&quot; [19] &quot;/tags/959&quot; [20] &quot;/tags/601&quot; [21] &quot;/tags/2036&quot; [22] &quot;/tags/2309&quot; [23] &quot;/tags/2223&quot; [24] &quot;/tags/1057&quot; [25] &quot;/tags/21&quot; [26] &quot;/tags/1323&quot; [27] &quot;/tags/895&quot; [28] &quot;/tags/1278&quot; [29] &quot;/tags/2166&quot; [30] &quot;/tags/288&quot; [31] &quot;/tags/1707&quot; [32] &quot;/tags/662&quot; [33] &quot;/tags/1512&quot; [34] &quot;/tags/1669&quot; [35] &quot;/tags/29&quot; [36] &quot;/tags/2696&quot; [37] &quot;/tags/2697&quot; [38] &quot;/tags/667&quot; [[3]] [1] &quot;/fanfiction/no_fandom/originals&quot; [2] &quot;/pairings/%D0%A2%D0%B0%D0%B2%D0%B8,%20%D0%9A%D0%BE%D0%BD%D1%8C&quot; [3] &quot;/tags/1665&quot; [4] &quot;/tags/924&quot; [5] &quot;/tags/606&quot; [6] &quot;/tags/2808&quot; [7] &quot;/tags/216&quot; [8] &quot;/tags/1294&quot; [9] &quot;/tags/1295&quot; [10] &quot;/tags/1685&quot; [11] &quot;/tags/551&quot; [12] &quot;/tags/1668&quot; [13] &quot;/tags/1385&quot; [14] &quot;/tags/1296&quot; [15] &quot;/tags/800&quot; [16] &quot;/tags/2455&quot; [17] &quot;/tags/1083&quot; [18] &quot;/tags/1419&quot; [19] &quot;/tags/993&quot; [20] &quot;/tags/989&quot; [21] &quot;/tags/959&quot; [22] &quot;/tags/2627&quot; [23] &quot;/tags/2350&quot; [24] &quot;/tags/1815&quot; [25] &quot;/tags/1015&quot; [26] &quot;/tags/661&quot; [27] &quot;/tags/2309&quot; [28] &quot;/tags/1677&quot; [29] &quot;/tags/1209&quot; [30] &quot;/tags/2462&quot; [31] &quot;/tags/1114&quot; [32] &quot;/tags/2166&quot; [33] &quot;/tags/538&quot; [34] &quot;/tags/490&quot; [35] &quot;/tags/872&quot; [36] &quot;/tags/1979&quot; Теперь и all_meta, и all_meta_links — это список (объект типа list). В данном случае внутрюняя структуру списка не очень сложная, но она нам важна (ведь в одном фанфике может быть несколько пэйрингов). Так что сначала создадим вектор, в котором запишем, сколько элементов попалось в каждом из фанфиков. map_dbl(all_meta, length) [1] 29 38 36 30 44 14 12 28 12 5 8 38 33 11 7 31 18 15 27 12 8 44 11 12 17 [26] 12 10 9 3 8 13 12 10 12 10 7 7 10 6 11 12 25 10 14 22 9 8 13 19 15 Теперь мы можем создать вектор с повторяющимеся значениями и вставить его как индекс: tibble(meta = unlist(all_meta), links = unlist(all_meta_links), name = rep(pop_fan_fiction$value, map_dbl(all_meta, length))) Мы получили нужный датасет, теперь давайте отфильтруем и соединим: tibble(meta = unlist(all_meta), links = unlist(all_meta_links), value = rep(pop_fan_fiction$value, map_dbl(all_meta, length))) %&gt;% filter(str_detect(links, &quot;pairings&quot;)) %&gt;% select(-links) %&gt;% group_by(value) %&gt;% summarise(pairing = str_c(meta, collapse = &quot; | &quot;)) %&gt;% full_join(pop_fan_fiction) 4.4 Обкачивание нескольких страниц До сих пор мы обкачивали только одну страницу, но представим себе, что нам нужно обкачать много однотипных страниц. В нашем случае это могут быть разные разделы популярных фанфиков: В данном случае все эти ссылки уже есть на странице, так что мы можем их скачать: source %&gt;% html_nodes(&quot;a&quot;) %&gt;% html_attr(&quot;href&quot;) %&gt;% str_subset(&quot;popular/&quot;) -&gt; links_to_scrap Теперь давайте подоготовим функцию для обкачивания: my_scrap &lt;- function(x){ print(x) source &lt;- read_html(str_c(&quot;https://ficbook.net&quot;, x)) source %&gt;% html_nodes(&quot;h3 &gt; a&quot;) %&gt;% html_text() -&gt; titles source %&gt;% html_nodes(&quot;h3 &gt; a&quot;) %&gt;% html_attr(&quot;href&quot;) -&gt; links tibble(titles, links) } А теперь мы готовы соединить все вместе: result &lt;- map_dfr(links_to_scrap, my_scrap) [1] &quot;/popular/gen&quot; [1] &quot;/popular/het&quot; [1] &quot;/popular/slash&quot; [1] &quot;/popular/femslash&quot; [1] &quot;/popular/article&quot; [1] &quot;/popular/mixed&quot; [1] &quot;/popular/other&quot; result Часто генерация ссылок для скачивания достаточно проста, например, чтобы скачать все фанфики, посвященные “Очень старнным делам,” нужно будет обкачать 172 страницы, и, хотя на первой странице не указано ссылки, как появляется так много страниц становится понятно на второй странице: str_c(&quot;https://ficbook.net/fanfiction/movies_and_tv_series/ochenj_strannie_dela?p=&quot;, 1:172, &quot;.html&quot;) %&gt;% head() [1] &quot;https://ficbook.net/fanfiction/movies_and_tv_series/ochenj_strannie_dela?p=1.html&quot; [2] &quot;https://ficbook.net/fanfiction/movies_and_tv_series/ochenj_strannie_dela?p=2.html&quot; [3] &quot;https://ficbook.net/fanfiction/movies_and_tv_series/ochenj_strannie_dela?p=3.html&quot; [4] &quot;https://ficbook.net/fanfiction/movies_and_tv_series/ochenj_strannie_dela?p=4.html&quot; [5] &quot;https://ficbook.net/fanfiction/movies_and_tv_series/ochenj_strannie_dela?p=5.html&quot; [6] &quot;https://ficbook.net/fanfiction/movies_and_tv_series/ochenj_strannie_dela?p=6.html&quot; 4.4.1 Некоторые советы Некоторые ресурсы блокируют возможность скачивать из них данные. Обычно это делается на уровне сервера, который видит, что с какого-то IP приходит по 5 запросов в секунду и ограничивает доступ, на случай если вы начинаете DDoS атаку. Если сервер не отдает вам данные или отдает, но раз в какой-то временной промежуток, следует прописать в вашей программе ожидание (команда Sys.sleep()). Некоторые сайты, например, Википедия, специально архивирует данные, чтобы люди не пытались ее обкачать: вот страница, на которой это подробно описано. Обкачайте первые 10 страниц вашего фандома и сделайте следующую таблицу. "]]
